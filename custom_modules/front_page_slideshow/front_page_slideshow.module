<?php
/**
 * @file
 * Code for the Front Page Slideshow feature.
 */

include_once 'front_page_slideshow.features.inc';

/**
 * Implements hook_menu().
 */

function front_page_slideshow_menu() {
  $items = array();
  $items['admin/front-page/slideshow-options'] = array(
    'title' => 'Slideshow Options',
    'description' => 'Adjust front page slideshow options',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('front_page_slideshow_form'),
    'access arguments' => array('administer site configuration'),
  );
  return $items;
}

function front_page_slideshow_form() {
  $form = array();
  $form['slideshow_count'] = array(
    '#type' => 'textfield',
    '#title' => 'Number of slides in slideshow',
    '#description' => 'Enter the number of desired slides.',
    '#required' => TRUE,
    '#default_value' => variable_get('slideshow_count',4),
  );
  $active_slides = front_page_slideshow_query_slides(FALSE,FALSE);
  $inactive_slides = front_page_slideshow_query_slides(FALSE,TRUE);
  $active_nids = array();
  foreach ($active_slides as $slide) {
    $active_nids[] = $slide->nid;
  }
  foreach ($inactive_slides as $key => $slide) {
    if (in_array($slide->nid,$active_nids)) {
      unset($inactive_slides[$key]);
    }
  }
  $form['active_slide_list'] = array(
    '#type' => 'item',
    '#markup' => t('Active slides are shown below:'). front_page_slideshow_build_slide_table($active_slides),
    '#title' => "Active Slides",
  );
  $form['inactive_slide_list'] = array(
    '#type' => 'item',
    '#markup' => t('Inactive slides are shown below:'). front_page_slideshow_build_slide_table($inactive_slides),
    '#title' => "Inactive Slides",
  );
  return system_settings_form($form);
}

function front_page_slideshow_build_slide_table($slides) {
  $slide_table = array();
  $slide_table['header'] = array(
    'Image',
    'Title',
    'Description',
    'Expiration',
    'Published',
    'Actions',
  );
  $slide_table['rows'] = array();
  foreach ($slides as $slide) {
   if (isset($slide->field_slide_expiration_date['und'])) {
    $date =      format_date($slide->field_slide_expiration_date['und'][0]['value']);
   }
   else {
     $date = "Never";
   }
   $actions = "";
   if (node_access("update",$slide)) {
     $actions .= l("edit","node/".$slide->nid."/edit")." ";
   }
   if (node_access("delete",$slide)) {
     $actions .= l("delete","node/".$slide->nid."/delete");
   }
   $slide_table['rows'][] = array(
     theme_image_style(array('path' => $slide->field_slide_image['und'][0]['uri'], 'style_name' => 'front_page_slide_admin','width'=>NULL,'height'=>NULL)),
     $slide->title,
     $slide->field_slide_text['und'][0]['value'],
     $date,
     str_replace(array('0','1'),array('No','Yes'),$slide->status),
     $actions,
   );
  }
  $slide_table['attributes'] = array(
    'class' => array('admin-slide-table'),
  );
  $slide_table['sticky'] = array();
  $slide_table['caption'] = '';
  $slide_table['empty'] = array();
  $slide_table['colgroups'] = array();
  return theme_table($slide_table);
}

function front_page_slideshow_get_slides() {
 $count = intval(variable_get("slideshow_count",4));
 $slides = front_page_slideshow_query_slides($count);
 return $slides; 
}

function front_page_slideshow_query_slides($count = FALSE, $all = FALSE) {
$query = db_select('node','n');
  $query->leftJoin('field_data_field_slide_expiration_date','d','d.revision_id = n.vid');
  $query->leftJoin('field_data_field_slide_permanent','p','p.revision_id = n.vid');
  $query->fields('n',array('nid'))
  ->fields('p',array('field_slide_permanent_value'))
  ->fields('d',array('field_slide_expiration_date_value'))
  ->condition('type','front_page_slide');
  if (!$all) {
    $query->condition('status',1)
      ->where('((p.field_slide_permanent_value > 0) OR (d.field_slide_expiration_date_value >='.time().'))');
  }
  $query->orderBy('p.field_slide_permanent_value','ASC')
    ->orderBy('n.created','DESC');
  if ($count) {
    $query->range(0,$count);
  }
  $result = $query->execute();
  $slides = array();
  while ($record = $result->fetchAssoc()) {
    $slides[] = node_load($record['nid']);
  }
  return $slides;
}

function front_page_slideshow_block_info() {
  $blocks = array();
  $blocks['front_page_slideshow_block'] = array(
      // info: The name of the block.
      'info' => t('Front page slideshow block'),
      'status' => TRUE,
      'region' => 'front_slideshow',
  );
  return $blocks;
}

function front_page_slideshow_block_view($delta = '') {
  switch ($delta) {
    case 'front_page_slideshow_block':
      $block['subject'] = "";
      $block['content'] = theme("front_page_slideshow",array('slides'=>front_page_slideshow_get_slides()));
    break;
  }
  return $block;
}

/****************************
Implementation of hook_theme()
****************************/

function front_page_slideshow_theme() {
  return array(
    'front_page_slideshow' => array(
      'variables' => array('slides'=>NULL),
      'template' => 'theme/slideshow',
    ),
  );
}

/* hook_node_view() */

function front_page_slideshow_node_view($node, $view_mode) {
  if ($node->type == "front_page_slide") {
    drupal_goto('admin/front-page/slideshow-options');
  }
}

/* hook_node_form_alter() */


function front_page_slideshow_form_alter(&$form, &$form_state, $form_id) {
  switch($form_id) {
    case "node_delete_confirm":
      $node = $form['#node'];
      if ($node->type == "front_page_slide") {
        $form['#submit'][] = 'front_page_slideshow_form_submit';
      }
    break;
  }
}

function front_page_slideshow_form_submit() {
    drupal_goto('admin/front-page/slideshow-options');  
}
