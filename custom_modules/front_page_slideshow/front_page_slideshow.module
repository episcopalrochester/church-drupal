<?php
/**
 * @file
 * Code for the Front Page Slideshow feature.
 */

include_once 'front_page_slideshow.features.inc';

/**
 * Implements hook_menu().
 */

function front_page_slideshow_menu() {
  $items = array();
  $items['admin/front-page/slideshow-options'] = array(
    'title' => 'Slideshow',
    'description' => 'Adjust front page slideshow slides and options',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('front_page_slideshow_form'),
    'access arguments' => array('administer site configuration'),
  );
  return $items;
}

function front_page_slideshow_form() {
  $form = array();
  $form['add_slide'] = array(
    '#type' => 'item',
    '#markup' => l("+ Add new slide","node/add/front-page-slide"),
  );
  $form['slideshow_count'] = array(
    '#type' => 'textfield',
    '#title' => 'Number of slides in slideshow',
    '#description' => 'Enter the number of desired slides.',
    '#required' => TRUE,
    '#default_value' => variable_get('slideshow_count',4),
  );
  $slides = front_page_slideshow_query_slides(FALSE,TRUE);
  $nids = array();
  foreach ($slides as $slide) {
    $nids[] = $slide->nid;
  }
  $form['slide_list'] = array(
    '#type' => 'item',
    '#markup' => t('Slides are shown below by the order in which they appear on the front page. Green slides will run on the front page. Yellow slides could run but are above the limit set above. Red slides are unpublished and will not appear.'),
    '#title' => "",
  );
  $form = array_merge($form,front_page_slideshow_build_slide_table($slides));
  $form['#submit'] = array('front_page_slideshow_form_submit');
  return system_settings_form($form);
}

function front_page_slideshow_build_slide_table($slides) {
  $slide_table = array();
  $slide_table['slide_table_drag_attributes'] = array(
    '#prefix' => '<div id="slide-attributes">',
    '#suffix' => '</div>',
    '#tree' => TRUE,
    '#theme' => 'slide_table_drag_components',
  );
  $count = 0;
  foreach ($slides as $slide) {
   $count++;
   $slide_table['slide_table_drag_attributes'][$count] = array();
   $actions = "";
   if (node_access("update",$slide)) {
     $actions .= l("edit","node/".$slide->nid."/edit")." ";
   }
   if (node_access("delete",$slide)) {
     $actions .= l("delete","node/".$slide->nid."/delete");
   }
   $slide_table['slide_table_drag_attributes'][$count]['nid'] = array(
     '#type' => 'hidden',
     '#value' => $slide->nid,
   );
   $slide_table['slide_table_drag_attributes'][$count]['image'] = array(
    '#type' => 'markup',
    '#markup' => theme_image_style(array('path' => $slide->field_slide_image['und'][0]['uri'], 'style_name' => 'front_page_slide_admin','width'=>NULL,'height'=>NULL)),
   );
   $slide_table['slide_table_drag_attributes'][$count]['title'] = array(
    '#type' => 'markup', 
    '#markup' => $slide->title,
   );
$slide_table['slide_table_drag_attributes'][$count]['text'] = array(
    '#type' => 'markup',
    '#markup' =>      $slide->field_slide_text['und'][0]['value'],
);
$slide_table['slide_table_drag_attributes'][$count]['status'] = array(
  '#type' => 'checkbox',
  '#default_value' => $slide->status,
  '#attributes' => array('class' => array('status')),
);
//     str_replace(array('0','1'),array('No','Yes'),$slide->status),
$slide_table['slide_table_drag_attributes'][$count]['actions'] = array(
    '#type' => 'markup',
    '#markup' =>      $actions,
);
if (isset($slide->field_slide_weight['und'])) {
  $position = $slide->field_slide_weight['und'][0]['value'];
}
else {
  $position = $count;
}
$slide_table['slide_table_drag_attributes'][$count]['weight'] = array(
      '#type' => 'textfield',
      '#default_value' => $position,      
 '#size' => 3,       
'#attributes' => array('class' => array('item-row-weight')),
);
  }
  return $slide_table;
}

function front_page_slideshow_get_slides() {
 $count = intval(variable_get("slideshow_count",4));
 $slides = front_page_slideshow_query_slides($count);
 return $slides; 
}

function front_page_slideshow_query_slides($count = FALSE, $unpublished = FALSE) {
$query = db_select('node','n');
  $query->leftJoin('field_data_field_slide_weight','w','w.revision_id = n.vid');
  $query->fields('n',array('nid'))
  ->condition('type','front_page_slide');
  if (!$unpublished) {
    $query->condition('status',1);
  }
  $query->orderBy('w.field_slide_weight_value','ASC')
    ->orderBy('n.status','DESC')
    ->orderBy('n.created','DESC');
  if ($count) {
    $query->range(0,$count);
  }
  $result = $query->execute();
  $slides = array();
  while ($record = $result->fetchAssoc()) {
    $slides[] = node_load($record['nid']);
  }
  return $slides;
}

function front_page_slideshow_block_info() {
  $blocks = array();
  $blocks['front_page_slideshow_block'] = array(
      // info: The name of the block.
      'info' => t('Front page slideshow block'),
      'status' => TRUE,
      'region' => 'front_slideshow',
      'cache' => DRUPAL_CACHE_GLOBAL,
      'visiblity' => BLOCK_VISIBILITY_LISTED,
      'pages' => "<front>",
  );
  return $blocks;
}

function front_page_slideshow_block_view($delta = '') {
  switch ($delta) {
    case 'front_page_slideshow_block':
      $block['subject'] = "";
      $block['content'] = theme("front_page_slideshow",array('slides'=>front_page_slideshow_get_slides()));
    break;
  }
  return $block;
}

function front_page_slideshow_contextual_links_view_alter(&$element, &$items) {
  if (isset($element['#element']['#block']) && $element['#element']['#block']->delta == "front_page_slideshow_block") {
    $element['#links'] = array();
    $element['#links']['edit-slideshow'] = array(
      'title' => 'Edit slideshow',
      'href' => url('admin/front-page/slideshow-options', array('absolute' => TRUE)),
    );
  }
}

/****************************
Implementation of hook_theme()
****************************/

function front_page_slideshow_theme() {
  return array(
    'front_page_slideshow' => array(
      'variables' => array('slides'=>NULL),
      'template' => 'theme/slideshow',
    ),
    'slide_table_drag_components' => array(
      'render element' => 'element'
    ),
  );
}

function theme_slide_table_drag_components($vars) {
  $element = $vars['element'];   
 drupal_add_tabledrag('slide_table', 'order', 'sibling', 'item-row-weight');
 $header = array(
 'title' => t('Title'),
 'image' => t('Image'),
 'text' => t('Text'),
 'status' => t('Published'),
 'actions' => t('Actions'),
 'weight' => t('Weight'),
 );
 $rows = array();   
 foreach (element_children($element) as $key) {
 $row = array();
 $row['data'] = array();
 foreach ($header as $fieldname => $title) {
   $row['data'][] = drupal_render($element[$key][$fieldname]);
   $row['class'] = array('draggable');
 }
 $rows[] = $row;   }
 return theme('table', array(
 'header' => $header,
  'rows' => $rows,
 'attributes' => array('id' => 'slide_table'),   ));
}

/* hook_node_view() */

function front_page_slideshow_node_view($node, $view_mode) {
  if ($node->type == "front_page_slide" && $view_mode == "full") {
    drupal_goto('admin/front-page/slideshow-options');
  }
}

/* hook_node_form_alter() */


function front_page_slideshow_form_alter(&$form, &$form_state, $form_id) {
  switch($form_id) {
    case "node_delete_confirm":
      $node = $form['#node'];
      if ($node->type == "front_page_slide") {
        $form['#submit'][] = 'front_page_slideshow_form_submit';
      }
    break;
  }
}

function front_page_slideshow_form_submit($form, &$form_state) {
  foreach ($form_state['values']["slide_table_drag_attributes"] as $key => $slide) {
    $node = node_load($slide['nid']);
    $node->field_slide_weight['und'] = array(
      '0' => array(
         'value' => $slide['weight'],
       ),
    );
    $node->status = $slide['status'];
    node_save($node);
  }
  drupal_goto('admin/front-page/slideshow-options');  
}
