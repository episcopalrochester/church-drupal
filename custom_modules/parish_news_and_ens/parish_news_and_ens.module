<?php
/**
 * @file
 * Code for the Parish News and ENS feature.
 */

include_once 'parish_news_and_ens.features.inc';

/* hook_block_info() implementation */

function parish_news_and_ens_block_info() {
  $blocks = array();
  $blocks['ens'] = array(
      'info' => t('Episcopal News Service'),
      'status' => TRUE,
      'region' => 'content',
  );
  $blocks['parish_news'] = array(
      'info' => t('Parish_news'),
      'status' => TRUE,
      'region' => 'content',
  );
  return $blocks;
}

/* hook_block_view implementation */

function  parish_news_and_ens_block_view($delta = '') {
 switch ($delta) {
    case 'ens':
      $block['subject'] = "Episcopal News Service";
      $block['content'] = theme("ens_block",array('articles'=>parish_news_and_ens_get_articles('episcopal_news_service',6)));
    break;
    case 'parish_news':
      $block['subject'] = "Parish News";
      $block['content'] = theme("parish_news_block",array('articles'=>parish_news_and_ens_get_articles(FALSE)));
    break;
  }
  return $block;
}

/****************************
Implementation of hook_theme()
****************************/

function parish_news_and_ens_theme() {
  return array(
    'ens_block' => array(
      'variables' => array('articles'=>array()),
      'template' => 'theme/ens-block',
    ),
    'parish_news_block' => array(
      'variables' => array('articles'=>array()),
      'template' => 'theme/parish-news-block',
    ),
  );
}

/* db_select query for articles (used instead of entity query because of complexity) */

function parish_news_and_ens_get_articles($type = FALSE,$limit = FALSE,$expired=FALSE, $pager = FALSE) {
  $query = db_select('node','n');
  if ($type) {
    $query->leftJoin('feeds_item','f','f.entity_id = n.nid AND n.nid = n.nid');
    $query->condition('f.id',$type,'=');
  }
  else {
    $subquery = db_select('feeds_item','f')
      ->fields('f',array('entity_id'))
      ->condition("f.id","import_news","!=");
    $query->condition('n.nid',$subquery,'NOT IN');
  }
  if (!$expired) {
    $time = time() - (60*60*24*30);
    $not_expired_or_sticky = db_or()
      ->condition('n.created',$time,'>')
      ->condition('n.sticky',1,'=');
    $query->condition($not_expired_or_sticky);
    }
  $query->fields('n',array('nid'))
    ->condition('type','article')
    ->condition('status',1)
    ->orderBy('n.sticky','DESC')
    ->orderBy('n.created','DESC');
  if ($limit) {
    $query->range(0,$limit);
  }
  if ($pager) {
    $query = $query->extend('TableSort')->extend('PagerDefault')->limit(30);
  }
  $result = $query->execute();
  $articles = array();
  while ($record = $result->fetchAssoc()) {
    $articles[] = node_load($record['nid']);
  }
  return $articles;
}

/**
 * Implements hook_menu().
 */

function parish_news_and_ens_menu() {
  $items = array();
  $items['admin/content/news'] = array(
    'title' => 'News',
    'description' => 'News content',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('parish_news_and_ens_form'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_LOCAL_TASK,
  );
  return $items;
}

function parish_news_and_ens_form($form,&$form_state) {
  $form['news_add_link'] = array(
    '#type' => 'item',
    '#markup' => l("+ Add news article","node/add/article"),
    '#prefix' => "<br />",
  );
  $variables = array(
    'header' => array('Title','Date','Published','Sticky','edit','delete'),
    'rows' => array(),
    'attributes' => array(),
    'caption' => 'News Articles',
    'colgroups' => array(),
    'sticky' => FALSE,
    'empty' => '',
  );
  $news = parish_news_and_ens_get_articles(FALSE,FALSE,TRUE,TRUE);
  $time = time() - (60*60*24*30);
  foreach ($news as $node) {
    $row = array(
      'data'  => array(
        l($node->title,'node/'.$node->nid),
        format_date($node->created),
        str_replace(array('0','1'),array('No','Yes'),$node->status),
        str_replace(array('0','1'),array('No','Yes'),$node->sticky),
        l("Edit",'node/'.$node->nid."/edit"),
        l("Delete",'node/'.$node->nid."/delete"),
      ),
    );
    if ($node->created < $time) {
      $row['class'] = array("expired");
    }
    $variables['rows'][] = $row;
  }
  $form['news_articles'] = array(
    '#type' => 'item',
    '#markup' => theme_table($variables).theme('pager', array('tags' => array())),
  );
  return $form;
}


