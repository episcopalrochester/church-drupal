<?php
/**
 * @file
 * Code for the Sermons feature.
 */

include_once 'sermons.features.inc';

/**
 * Implements hook_menu().
 */

function sermons_menu() {
  $items = array();
  $items['sermons'] = array(
      'title' => 'Sermons',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('sermons_page_form'),
      'access callback' => TRUE,
      );
  $items['admin/content/sermons'] = array(
      'title' => 'Sermons',
      'description' => 'Sermon content',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('sermons_admin_form'),
      'access arguments' => array('administer site configuration'),
      'type' => MENU_LOCAL_TASK,
      );
  return $items;
}

/* Form for sermons - used to allow searching functions */

function sermons_page_form($form, &$form_state) {
  $form['#method'] = "get";
  $staff = clergy_and_staff_query_staff();
  $count = 1;
  if (!arg(1) || (is_numeric(arg(1)))) {
    foreach ($staff as $member) {
      if (!arg(1) || arg(1) == $member->nid) {
        if (!arg(1)) {
          $sermons = sermons_get_nodes(1,FALSE,NULL,$member->nid);
        }
        elseif (arg(1) == $member->nid) {
          $sermons = sermons_get_nodes(5,TRUE,NULL,$member->nid);
        }
        if (count($sermons['nodes'])) {
          $form[$count] = array(
              '#type' => 'fieldset',
              '#title' => $member->title,
              );
          $form[$count]['sermons'] = array(
              '#markup' => theme('sermons_page',array('sermons' => $sermons)),
              );
          if (arg(1) != $member->nid) {
            $form[$count]['more'] = array(
                '#markup' => l('<strong>&raquo; More sermons by '.$member->title."</strong>",'sermons/'.$member->nid,array('html'=>TRUE)),
                );
          }
        }
        $count++;
      }
    }
  }
  if (!arg(1) || arg(1) == "guest") {
    if (!arg(1)) {
      $guest_sermons = sermons_get_nodes(1,FALSE,NULL,FALSE,TRUE);
    }
    if (arg(1) == "guest") {
      $guest_sermons = sermons_get_nodes(5,TRUE,NULL,FALSE,TRUE);
    }
    if (count($guest_sermons['nodes'])) {
      $form['guest'] = array(
          '#type' => 'fieldset',
          '#title' => 'Guest Sermons',
          );
      $form['guest']['sermons'] = array(
          '#markup' => theme('sermons_page',array('sermons' => $guest_sermons)),
          );
      if (!arg(1)) {
        $form['guest']['more'] = array(
            '#markup' => l('<strong>&raquo; More guest sermons</strong>','sermons/guest',array('html'=>TRUE)),
            );
      }
    }
  }
  return $form;
}

/* admin form */

function sermons_admin_form($form, &$form_state) {
  $form['sermons_add_link'] = array(
      '#type' => 'item',
      '#markup' => l("+ Add sermon","node/add/sermon"),
      '#prefix' => "<br />",
      );
  $variables = array(
      'header' => array('Title','Date','Published','Sticky','edit','delete'),
      'rows' => array(),
      'attributes' => array(),
      'caption' => 'Sermons',
      'colgroups' => array(),
      'sticky' => FALSE,
      'empty' => '',
      );
  $sermons = sermons_get_nodes(30,TRUE);
  foreach ($sermons['nodes'] as $node) {
    $row = array(
        'data'  => array(
          l($node->title,'node/'.$node->nid),
          format_date($node->field_sermon_date['und'][0]['value'],"custom","l, F j, Y"),
          str_replace(array('0','1'),array('No','Yes'),$node->status),
          str_replace(array('0','1'),array('No','Yes'),$node->sticky),
          l("Edit",'node/'.$node->nid."/edit"),
          l("Delete",'node/'.$node->nid."/delete"),
          ),
        );
    $variables['rows'][] = $row;
  }
  $form['sermons'] = array(
      '#type' => 'item',
      '#markup' => theme_table($variables).$sermons['pager'],
      );
  return $form;
}

/* Entity query for sermons */

function sermons_get_nodes($range = 4,$pager = TRUE,$search = array(), $nid = FALSE, $guest = FALSE) {
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'sermon')
    ->propertyCondition('status', 1)
    ->fieldOrderBy('field_sermon_date','value','DESC')
    ->propertyOrderBy('created','DESC');
  if ($nid) {
    $query->fieldCondition('field_sermon_author','nid',$nid);
  }
  if ($guest) {
    $query->fieldCondition('field_sermon_by_text','value','NULL','!=');
  }
  if (isset($search['by_title'])) {
    $query->propertyCondition('title',"%".$search['by_title']."%",'LIKE');
  }
  if (!$pager) {
    $query->range(0,$range);
  }
  else {
    $query->pager($range);
  }
  $result = $query->execute();
  $sermons = array('nodes' => array(), 'pager' => '');
  if (isset($result['node'])) {
    $sermons_nids = array_keys($result['node']);
    $sermons = array('nodes'=>entity_load('node', $sermons_nids));
    if ($pager) {
      $sermons['pager'] = theme('pager',$query->pager);
    }
  }
  return $sermons;
}

/****************************
  Implementation of hook_theme()
 ****************************/

function sermons_theme() {
  return array(
      'sermons_page' => array(
        'variables' => array('sermons'=>NULL),
        'template' => 'theme/sermons',
        ),
      );
}
