<?php
/**
 * @file
 * Code for the Sermons feature.
 */

include_once 'sermons.features.inc';

/**
 * Implements hook_menu().
 */

function sermons_menu() {
  $items = array();
  $items['sermons'] = array(
    'title' => 'Sermons',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('sermons_page_form'),
    'access callback' => TRUE,
  );
  $items['admin/content/sermons'] = array(
    'title' => 'Sermons',
    'description' => 'Sermon content',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('sermons_admin_form'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_LOCAL_TASK,
  );
  return $items;
}

/* Form for sermons - used to allow searching functions */

function sermons_page_form($form, &$form_state) {
  $form['#method'] = "get";
  $form['results'] = array(
    '#markup' => theme('sermons_page',array('sermons'=>sermons_get_nodes())),
  );
  return $form;
}

/* admin form */

function sermons_admin_form($form, &$form_state) {
  $form['sermons_add_link'] = array(
    '#type' => 'item',
    '#markup' => l("+ Add sermon","node/add/sermon"),
    '#prefix' => "<br />",
  );
  $variables = array(
    'header' => array('Title','Date','Published','Sticky','edit','delete'),
    'rows' => array(),
    'attributes' => array(),
    'caption' => 'Sermons',
    'colgroups' => array(),
    'sticky' => FALSE,
    'empty' => '',
  );
  $sermons = sermons_get_nodes(30,TRUE);
  foreach ($sermons['nodes'] as $node) {
    $row = array(
      'data'  => array(
        l($node->title,'node/'.$node->nid),
        format_date($node->field_sermon_date['und'][0]['value'],"custom","l, F j, Y"),
        str_replace(array('0','1'),array('No','Yes'),$node->status),
        str_replace(array('0','1'),array('No','Yes'),$node->sticky),
        l("Edit",'node/'.$node->nid."/edit"),
        l("Delete",'node/'.$node->nid."/delete"),
      ),
    );
    $variables['rows'][] = $row;
  }
  $form['sermons'] = array(
    '#type' => 'item',
    '#markup' => theme_table($variables).$sermons['pager'],
  );
  return $form;
}

/* Entity query for sermons */

function sermons_get_nodes($range = 4,$pager = TRUE,$search = array()) {
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'sermon')
    ->propertyCondition('status', 1)
    ->fieldOrderBy('field_sermon_date','value','DESC')
    ->propertyOrderBy('created','DESC');
  if (isset($search['by_title'])) {
    $query->propertyCondition('title',"%".$search['by_title']."%",'LIKE');
  }
  if (!$pager) {
    $query->range(0,$range);
  }
  else {
    $query->pager($range);
  }
  $result = $query->execute();
  $sermons = array('nodes' => array(), 'pager' => '');
  if (isset($result['node'])) {
    $sermons_nids = array_keys($result['node']);
    $sermons = array('nodes'=>entity_load('node', $sermons_nids));
    if ($pager) {
      $sermons['pager'] = theme('pager',$query->pager);
    }
  }
  return $sermons;
}

/****************************
Implementation of hook_theme()
****************************/

function sermons_theme() {
    return array(
    'sermons_page' => array(
      'variables' => array('sermons'=>NULL),
      'template' => 'theme/sermons',
    ),
  );
}
